apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: frigate
  namespace: frigate
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: frigate
  serviceName: "frigate"
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: frigate
    spec:
      containers:
      - name: frigate
        image: ghcr.io/blakeblackshear/frigate:stable
        imagePullPolicy: Always
        securityContext:
          privileged: true
        ports:
        - containerPort: 8971
          name: http
        - containerPort: 5000
          name: http-internal
        - containerPort: 8554
          name: rtsp
        - containerPort: 8555
          name: webrtc
        - containerPort: 8555
          protocol: UDP
          name: webrtc-udp
        env:
        - name: TZ
          value: America/Detroit
        volumeMounts:
        - name: cache
          mountPath: /tmp/cache
        - name: dshm
          mountPath: /dev/shm
        - name: config
          mountPath: "/config"
        - name: media
          mountPath: "/media/frigate"
        resources:
          requests:
            memory: "4Gi"
            cpu: "1500m"
          limits:
            memory: "8Gi"
            cpu: "6000m"
            gpu.intel.com/i915: 6
## For local Corl TPU
#            squat.ai/coral: 1
        readinessProbe:                # Check that the http server is responding to ensure the container is up
          tcpSocket:
            port: 5000
        livelinessProbe:               # Check that the http server is responding to ensure the container is up
          tcpSocket:
            port: 5000
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 5
      volumes:
      - name: cache
        emptyDir:
          medium: Memory
          sizeLimit: 1024Mi
      - name: dshm
        emptyDir:
          medium: Memory
          sizeLimit: 512Mi
      - name: media
        nfs:
          server: truenas.dmz.farh.net
          path: /mnt/pool0/frigate
  volumeClaimTemplates:
  - metadata:
      name: config
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: longhorn-perpetual
      resources:
        requests:
          storage: 4Gi
