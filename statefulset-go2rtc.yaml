apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: go2rtc
  labels:
    app.kubernetes.io/name: go2rtc
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: go2rtc
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
           matchExpressions:
            - key: <label-key>
              operator: In
              values:
              - <label-value>
          topologyKey: kubernetes.io/hostname
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: go2rtc
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: go2rtc # https://github.com/AlexxIT/go2rtc
          image: alexxit/go2rtc:latest-hardware
          imagePullPolicy: Always
          env:
            - name: TZ
              value: "America/Detroit"
          securityContext:
            allowPrivilegeEscalation: false
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "2000m"
              gpu.intel.com/i915: 2
          ports:
            - name: "web"
              containerPort: 1984
            - name: "rtsp"
              containerPort: 8554
            - name: "webrtc"
              containerPort: 8555
            - name: "webrtc-udp"
              containerPort: 8555
              protocol: UDP
          volumeMounts:
            - name: config
              mountPath: /config
          readinessProbe:
            httpGet:
              path: /
              port: web
            initialDelaySeconds: 10
            periodSeconds: 20
            failureThreshold: 5
          livenessProbe:
            httpGet:
              path: /
              port: web
            initialDelaySeconds: 30
            periodSeconds: 60
            failureThreshold: 5
  volumeClaimTemplates:
  - metadata:
      name: config
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: longhorn-perpetual
      resources:
        requests:
          storage: 4Gi
---
#apiVersion: autoscaling/v2
#kind: HorizontalPodAutoscaler
#metadata:
#  name: go2rtc
#spec:
#  scaleTargetRef:
#    apiVersion: apps/v1
#    kind: Deployment
#    name: go2rtc
#  minReplicas: 2
#  maxReplicas: 3
#  metrics:
#    - type: Resource
#      resource:
#        name: cpu
#        target:
#          type: Utilization
#          averageUtilization: 75
#  behavior:
#    scaleDown:
#      stabilizationWindowSeconds: 900
#    scaleUp:
#      stabilizationWindowSeconds: 180