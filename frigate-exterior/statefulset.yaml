---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: frigate-exterior
  labels:
    app.kubernetes.io/name: frigate
    app.kubernetes.io/instance: frigate-exterior
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: frigate
      app.kubernetes.io/instance: frigate-exterior
  template:
    metadata:
      labels:
        app.kubernetes.io/name: frigate
        app.kubernetes.io/instance: frigate-exterior
    spec:
      initContainers:
        - name: copyconfig
          image: "ghcr.io/blakeblackshear/frigate:0.15.1"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /config.yaml
              subPath: config.yaml
              name: configmap
            - mountPath: /config
              name: config
          command: [ "cp" ]
          args: [ "-v", "/config.yaml", "/config/config.yaml" ]
      containers:
        - name: frigate
          image: "ghcr.io/blakeblackshear/frigate:0.15.1"
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
            - name: http-auth
              containerPort: 8971
              protocol: TCP
            - name: rtmp
              containerPort: 1935
              protocol: TCP
            - name: rtsp
              containerPort: 8554
              protocol: TCP
            - name: webrtc-udp
              containerPort: 8555
              protocol: UDP
            - name: webrtc-tcp
              containerPort: 8555
              protocol: TCP
            - name: go2rtc-admin
              containerPort: 1984
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            failureThreshold: 5
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            failureThreshold: 5
            timeoutSeconds: 10
          env:
          envFrom:
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /data
              name: data
            - mountPath: /media
              name: media
            - name: dshm
              mountPath: /dev/shm
            - name: tmp
              mountPath: /tmp
          resources:
            limits:
              gpu.intel.com/i915: 1
              memory: 8Gi
            requests:
              cpu: 2000m
              memory: 4Gi
      volumes:
        - name: configmap
          configMap:
            name: frigate-exterior
        - name: data
          emptyDir: {}
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 512Mi
        - name: tmp
          emptyDir:
            medium: Memory
            sizeLimit: 1024Mi
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/gpu
                operator: In
                values:
                - "true"
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - frigate
              topologyKey: kubernetes.io/hostname
            weight: 100
  volumeClaimTemplates:
  - metadata:
      name: config
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
  - metadata:
      name: media
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 256Gi