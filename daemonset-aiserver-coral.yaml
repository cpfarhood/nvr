apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: aiserver
  labels:
    app.kubernetes.io/name: aiserver
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: aiserver
  template:
    metadata:
      labels:
        app.kubernetes.io/name: aiserver
    spec:
      nodeSelector:
        node-role.kubernetes.io/tpu: "true" # Ensure this label is added to appropriate nodes
      priorityClassName: system-node-critical
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - aiserver
              topologyKey: kubernetes.io/hostname
      containers:
        - name: ai-server
          image: codeproject/ai-server:2.9.7
          imagePullPolicy: Always
          env:
            - name: TZ
              value: "America/Detroit"
          securityContext:
            allowPrivilegeEscalation: false
          resources:
            requests:
              memory: "2Gi"
              cpu: "250m"
            limits:
              memory: "4Gi"
              coral.ai/tpu: 1
          ports:
            - name: "http-32168"
              containerPort: 32168
          volumeMounts:
            - name: config
              mountPath: "/etc/codeproject/ai"
            - name: modules
              mountPath: "/app/modules"
          readinessProbe:
            httpGet:
              path: /
              port: http-32168
          livenessProbe:
            httpGet:
              path: /
              port: http-32168
      volumes:
        - name: config
          hostPath:
            path: "/etc/codeproject/ai"
        - name: modules
          hostPath:
            path: "/app/modules"